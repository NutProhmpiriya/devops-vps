version: '3.8'

services:
  # frontend:
  #   build:
  #     context: ../frontend
  #     dockerfile: Dockerfile.local
  #   container_name: nextjs-frontend-local
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ../frontend:/app
  #     - /app/node_modules
  #     - /app/.next
  #   environment:
  #     - NODE_ENV=development
  #   depends_on:
  #     - backend
  #   networks:
  #     - app-network

  # backend:
  #   build:
  #     context: ../backend
  #     dockerfile: Dockerfile.local
  #   container_name: strapi-backend-local
  #   ports:
  #     - "1337:1337"
  #   volumes:
  #     - ../backend:/app
  #     - /app/node_modules
  #   environment:
  #     - NODE_ENV=development
  #     - DATABASE_CLIENT=postgres
  #     - DATABASE_HOST=postgres
  #     - DATABASE_PORT=5432
  #     - DATABASE_NAME=strapi
  #     - DATABASE_USERNAME=strapi
  #     - DATABASE_PASSWORD=strapi123
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #   depends_on:
  #     - postgres
  #     - redis
  #   networks:
  #     - app-network

  postgres:
    image: postgres:15-alpine
    container_name: postgres-local
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=strapi
      - POSTGRES_USER=strapi
      - POSTGRES_PASSWORD=strapi123
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U strapi"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis-local
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
